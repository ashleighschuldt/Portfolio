"use strict";var precacheConfig=[["/index.html","e712af4053c4d79a507f76371f230f9c"],["/static/css/main.fd2b5499.css","6d70d63caa48d314e5c720c019e5bc08"],["/static/js/main.492e7451.js","3624d8f1f5d65c7efa5b226b2b022f62"],["/static/media/DevCodeBar.e874d125.PNG","e874d125af3e9c9498e0f67b13f26183"],["/static/media/LOLHawaiian.12de1bcd.PNG","12de1bcd7d29ffc3c62aab28d8116e0c"],["/static/media/carloanapp.785392f9.PNG","785392f9c31adc52388868386dde3a37"],["/static/media/css.df2a153b.svg","df2a153be11d45cef48915c68c951732"],["/static/media/git.46d7a154.svg","46d7a1547e9f13fb51d6a2c842838d36"],["/static/media/github-word.fff79394.svg","fff793948eaad4a21b6fb5712888d62d"],["/static/media/github.4097a5be.svg","4097a5be85bf4c4e64ec52f389ea039d"],["/static/media/heroku.6fd6c3b7.svg","6fd6c3b7084c6789f79c57fc4d9c7a43"],["/static/media/html.67d97895.svg","67d978951e48c3e185e053b9fefa8afb"],["/static/media/javascript.0154328f.svg","0154328fc3e7bfcdb3d9ca42a6f848b1"],["/static/media/me.142fe360.jpg","142fe36048e48146c6ca42d171b7d70f"],["/static/media/mocha.14785336.svg","1478533601c8d628375a8cbb63c3d84a"],["/static/media/mongoDB.07c92838.svg","07c9283865d46d378d438f9b33a33fd7"],["/static/media/node.8f85d265.svg","8f85d2657215e5b03c70695d15f0f327"],["/static/media/postgresql.06aadd67.svg","06aadd677b6b17185cc1dcf7247ece37"],["/static/media/react.fadd9c95.svg","fadd9c9566ccc46c6b0e73caca5860de"],["/static/media/sass.88c10477.svg","88c1047792044b547d1d3e066d3e18c4"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});